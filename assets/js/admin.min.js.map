{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/admin.js","admin.js","assets/js/components/DynamicTable.js","assets/js/components/IndexButtons.js","assets/js/components/Notes.js","assets/js/components/Sortable.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_DynamicTable","_DynamicTable2","_Sortable","_Sortable2","_IndexButtons","_IndexButtons2","_Notes","_Notes2","_ADMIN","./components/DynamicTable.js","./components/IndexButtons.js","./components/Notes.js","./components/Sortable.js","2","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","DynamicTable","_this","this","$","each","index","element","init","$table","$body","find","data","html","empty","bindEvents","j","add","_this2","on","remove","currentTarget","closest","append","Mustache","render","$row","3","IndexButtons","$buttons","addClass","4","Notes","$btn","$modal","dialog","modal","title","width","height","load","model_name","model_provider","id","ajax","url","window","SITE_URL","done","response","$ul","renderMessageItem","message","user","date","$formItem","$textarea","text","method","val","before","error","showError","responseText","$message","$meta","$user","first_name","last_name","$date","JSON","parse","alert","5","Sortable","$item","handle","axis","containment","sortable","forceHelperSize","helper","tr","$originals","children","$helper","clone","eq","outerWidth","stop"],"mappings":"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","file":"admin.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\nlet _ADMIN;\n\nimport DynamicTable from './components/DynamicTable.js';\nimport Sortable from './components/Sortable.js';\nimport IndexButtons from './components/IndexButtons.js';\nimport Notes from './components/Notes.js';\n\n_ADMIN = (function() {\n    const dynamicTable = new DynamicTable();\n    const sortable = new Sortable();\n    const indexButtons = new IndexButtons();\n    const notes = new Notes();\n})();\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar _DynamicTable = require('./components/DynamicTable.js');\n\nvar _DynamicTable2 = _interopRequireDefault(_DynamicTable);\n\nvar _Sortable = require('./components/Sortable.js');\n\nvar _Sortable2 = _interopRequireDefault(_Sortable);\n\nvar _IndexButtons = require('./components/IndexButtons.js');\n\nvar _IndexButtons2 = _interopRequireDefault(_IndexButtons);\n\nvar _Notes = require('./components/Notes.js');\n\nvar _Notes2 = _interopRequireDefault(_Notes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ADMIN = void 0;\n\n_ADMIN = function () {\n    var dynamicTable = new _DynamicTable2.default();\n    var sortable = new _Sortable2.default();\n    var indexButtons = new _IndexButtons2.default();\n    var notes = new _Notes2.default();\n}();\n\n},{\"./components/DynamicTable.js\":2,\"./components/IndexButtons.js\":3,\"./components/Notes.js\":4,\"./components/Sortable.js\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* export DynamicTable */\n\n/* globals Mustache, $, jQuery */\nvar DynamicTable = function () {\n\n    /**\n     * Construct DynamicTable\n     * @return {DynamicTable}\n     */\n    function DynamicTable() {\n        var _this = this;\n\n        _classCallCheck(this, DynamicTable);\n\n        $('.js-admin-dynamic-table').each(function (index, element) {\n            _this.init($(element));\n        });\n        return this;\n    }\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Initialise a dynamic table\n     * @param {jQuery} $table The table DOM element\n     * @return {DynamicTable}\n     */\n\n\n    _createClass(DynamicTable, [{\n        key: 'init',\n        value: function init($table) {\n\n            var $body = $table.find('.js-admin-dynamic-table__template');\n            var data = $table.data('data') || [];\n\n            $table.data('template', $body.html());\n            $table.data('index', 0);\n            $body.empty();\n\n            this.bindEvents($table, $body);\n\n            for (var i = 0, j = data.length; i < j; i++) {\n                this.add($table, $body, data[i]);\n            }\n\n            return this;\n        }\n\n        // --------------------------------------------------------------------------\n\n        /**\n         * Bind events\n         * @param {jQuery} $table The table DOM element\n         * @param {jQuery} $body The body DOM element\n         * @return {DynamicTable}\n         */\n\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents($table, $body) {\n            var _this2 = this;\n\n            $('.js-admin-dynamic-table__add', $table).on('click', function () {\n                _this2.add($table, $body);\n                return false;\n            });\n\n            $table.on('click', '.js-admin-dynamic-table__remove', function (e) {\n                _this2.remove($(e.currentTarget).closest('tr'));\n                return false;\n            });\n\n            return this;\n        }\n\n        // --------------------------------------------------------------------------\n\n        /**\n         * Add a new row\n         * @param {jQuery} $table The table DOM element\n         * @param {jQuery} $body The body DOM element\n         * @param {Object} data Data to render the row with\n         * @return {DynamicTable}\n         */\n\n    }, {\n        key: 'add',\n        value: function add($table, $body, data) {\n            data = data || {};\n            data.index = $table.data('index') || 0;\n            $body.append(Mustache.render($table.data('template'), data));\n            $table.data('index', data.index + 1);\n\n            return this;\n        }\n\n        // --------------------------------------------------------------------------\n\n        /**\n         * Remove a row\n         * @param {jQuery} $row The row DOM element\n         * @return {DynamicTable}\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove($row) {\n            $row.remove();\n            return this;\n        }\n    }]);\n\n    return DynamicTable;\n}();\n\nexports.default = DynamicTable;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* export IndexButtons */\n\n/* globals $, jQuery */\nvar IndexButtons =\n\n/**\n * Construct IndexButtons\n * @return {IndexButtons}\n */\nfunction IndexButtons() {\n    _classCallCheck(this, IndexButtons);\n\n    $('td.actions').each(function (index, element) {\n        var $buttons = $('> a', element);\n        if ($buttons.length > 3) {\n            $buttons.addClass('btn-block');\n        }\n    });\n    return this;\n};\n\nexports.default = IndexButtons;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* export Notes */\n\n/* globals $, jQuery */\n\nvar Notes = function () {\n    /**\n     * Construct Notes\n     * @return {Notes}\n     */\n    function Notes() {\n        var _this = this;\n\n        _classCallCheck(this, Notes);\n\n        $('.js-admin-notes').on('click', function (e) {\n\n            var $btn = $(e.currentTarget);\n            var $modal = $('<div>').dialog({\n                modal: true,\n                title: $btn.data('modal-title') || 'Notes',\n                width: $btn.data('modal-width') || 500,\n                height: $btn.data('modal-height') || 500\n            });\n\n            _this.load($modal, $btn.data('model-name'), $btn.data('model-provider'), $btn.data('id'));\n\n            return false;\n        });\n\n        return this;\n    }\n\n    _createClass(Notes, [{\n        key: 'load',\n\n\n        // --------------------------------------------------------------------------\n\n        /**\n         * Load notes from the server\n         * @param {jQuery} $modal The modal object\n         * @param {String} model_name The model name\n         * @param {String} model_provider The model provider\n         * @param {Number} id The item's ID\n         */\n        value: function load($modal, model_name, model_provider, id) {\n\n            $modal.html('<p>Loading...</p>');\n\n            $.ajax({\n                'url': window.SITE_URL + 'api/admin/notes',\n                'data': {\n                    'model_name': model_name,\n                    'model_provider': model_provider,\n                    'id': id\n                }\n            }).done(function (response) {\n\n                $ul = $('<ul>').addClass('admin-notes');\n\n                if (response.data.length) {\n                    for (var i = 0, j = response.data.length; i < j; i++) {\n                        $ul.append(Notes.renderMessageItem(response.data[i].message, response.data[i].user, response.data[i].date));\n                    }\n                } else {\n                    $ul.append($('<li>').html('No notes recorded for this item'));\n                }\n\n                var $formItem = $('<li>');\n                var $textarea = $('<textarea>');\n                var $btn = $('<button>').addClass('btn btn-block btn-primary').text('Add Item').on('click', function () {\n                    $.ajax({\n                        'url': window.SITE_URL + 'api/admin/notes',\n                        'method': 'POST',\n                        'data': {\n                            'model_name': model_name,\n                            'model_provider': model_provider,\n                            'id': id,\n                            'message': $textarea.val()\n                        }\n                    }).done(function (response) {\n                        $textarea.val('');\n                        $formItem.before(Notes.renderMessageItem(response.data.message, response.data.user, response.data.date));\n                    }).error(function (response) {\n                        Notes.showError(response.responseText);\n                    });\n                });\n\n                $ul.append($formItem.append($textarea).append($btn));\n\n                $modal.html($ul);\n            }).error(function (response) {\n                Notes.showError(response.responseText);\n            });\n        }\n    }], [{\n        key: 'renderMessageItem',\n\n\n        // --------------------------------------------------------------------------\n\n        /**\n         * Compiles the message ite\n         * @param {String} message The message string\n         * @param {Object} user The user object\n         * @param {String} date The date string\n         * @return {jQuery}\n         */\n        value: function renderMessageItem(message, user, date) {\n            var $message = $('<div>').addClass('admin-notes__message').html(message);\n            var $meta = $('<div>').addClass('admin-notes__meta');\n            var $user = $('<div>').addClass('admin-notes__user').html(user.first_name + ' ' + user.last_name);\n            var $date = $('<div>').addClass('admin-notes__date').html(date);\n            return $('<li>').append($message).append($meta.append($user).append($date));\n        }\n    }, {\n        key: 'showError',\n\n\n        // --------------------------------------------------------------------------\n\n        /**\n         * Renders an error\n         * @param {String} responseText The response text from the server\n         */\n        value: function showError(responseText) {\n            var data = void 0;\n            try {\n                data = JSON.parse(responseText);\n            } catch (e) {\n                data = { 'error': 'An unknown error occurred' };\n            }\n\n            //  @todo (Pablo - 2018-08-01) - Nicer errors\n            alert(data.error);\n        }\n    }]);\n\n    return Notes;\n}();\n\nexports.default = Notes;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* export Sortable */\n\n/* globals $, jQuery */\nvar Sortable =\n\n/**\n * Construct Sortable\n * @return {Sortable}\n */\nfunction Sortable() {\n    _classCallCheck(this, Sortable);\n\n    $('.js-admin-sortable').each(function () {\n\n        var $item = $(this);\n        var handle = $item.data('handle') || null;\n        var axis = $item.data('axis') || 'y';\n        var containment = $item.data('containment') || 'parent';\n\n        $item.sortable({\n            handle: handle,\n            axis: axis,\n            containment: containment,\n            forceHelperSize: true,\n            helper: function helper(e, tr) {\n                var $originals = tr.children();\n                var $helper = tr.clone();\n                $helper.children().each(function (index) {\n                    // Set helper cell sizes to match the original sizes\n                    $(this).width($originals.eq(index).outerWidth());\n                });\n                return $helper;\n            },\n            stop: function stop() {\n                $item.find('.js-admin-sortable__order').each(function (index) {\n                    $(this).val(index);\n                });\n            }\n        });\n    });\n\n    return this;\n};\n\nexports.default = Sortable;\n\n},{}]},{},[1])\n\n","/* export DynamicTable */\n\n/* globals Mustache, $, jQuery */\nclass DynamicTable {\n\n    /**\n     * Construct DynamicTable\n     * @return {DynamicTable}\n     */\n    constructor() {\n\n        $('.js-admin-dynamic-table')\n            .each((index, element) => {\n                this.init($(element));\n            });\n        return this;\n    }\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Initialise a dynamic table\n     * @param {jQuery} $table The table DOM element\n     * @return {DynamicTable}\n     */\n    init($table) {\n\n        let $body = $table.find('.js-admin-dynamic-table__template');\n        let data = $table.data('data') || [];\n\n        $table.data('template', $body.html());\n        $table.data('index', 0);\n        $body.empty();\n\n        this.bindEvents($table, $body);\n\n        for (let i = 0, j = data.length; i < j; i++) {\n            this.add($table, $body, data[i]);\n        }\n\n        return this;\n    }\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Bind events\n     * @param {jQuery} $table The table DOM element\n     * @param {jQuery} $body The body DOM element\n     * @return {DynamicTable}\n     */\n    bindEvents($table, $body) {\n        $('.js-admin-dynamic-table__add', $table)\n            .on('click', () => {\n                this.add($table, $body);\n                return false;\n            });\n\n        $table\n            .on('click', '.js-admin-dynamic-table__remove', (e) => {\n                this.remove($(e.currentTarget).closest('tr'));\n                return false;\n            });\n\n        return this;\n    }\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Add a new row\n     * @param {jQuery} $table The table DOM element\n     * @param {jQuery} $body The body DOM element\n     * @param {Object} data Data to render the row with\n     * @return {DynamicTable}\n     */\n    add($table, $body, data) {\n        data = data || {};\n        data.index = $table.data('index') || 0;\n        $body.append(\n            Mustache.render($table.data('template'), data)\n        );\n        $table.data('index', data.index + 1);\n\n        return this;\n    }\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Remove a row\n     * @param {jQuery} $row The row DOM element\n     * @return {DynamicTable}\n     */\n    remove($row) {\n        $row.remove();\n        return this;\n    }\n}\n\nexport default DynamicTable;\n","/* export IndexButtons */\n\n/* globals $, jQuery */\nclass IndexButtons {\n\n    /**\n     * Construct IndexButtons\n     * @return {IndexButtons}\n     */\n    constructor() {\n        $('td.actions')\n            .each((index, element) => {\n                let $buttons = $('> a', element);\n                if ($buttons.length > 3) {\n                    $buttons.addClass('btn-block');\n                }\n            });\n        return this;\n    }\n}\n\nexport default IndexButtons;\n","/* export Notes */\n\n/* globals $, jQuery */\n\nclass Notes {\n    /**\n     * Construct Notes\n     * @return {Notes}\n     */\n    constructor() {\n        $('.js-admin-notes')\n            .on('click', (e) => {\n\n                let $btn = $(e.currentTarget);\n                let $modal = $('<div>')\n                    .dialog({\n                        modal: true,\n                        title: $btn.data('modal-title') || 'Notes',\n                        width: $btn.data('modal-width') || 500,\n                        height: $btn.data('modal-height') || 500\n                    });\n\n                this.load(\n                    $modal,\n                    $btn.data('model-name'),\n                    $btn.data('model-provider'),\n                    $btn.data('id')\n                );\n\n                return false;\n            });\n\n        return this;\n    };\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Load notes from the server\n     * @param {jQuery} $modal The modal object\n     * @param {String} model_name The model name\n     * @param {String} model_provider The model provider\n     * @param {Number} id The item's ID\n     */\n    load($modal, model_name, model_provider, id) {\n\n        $modal.html('<p>Loading...</p>');\n\n        $.ajax({\n                'url': window.SITE_URL + 'api/admin/notes',\n                'data': {\n                    'model_name': model_name,\n                    'model_provider': model_provider,\n                    'id': id\n                }\n            })\n            .done((response) => {\n\n                $ul = $('<ul>').addClass('admin-notes');\n\n                if (response.data.length) {\n                    for (let i = 0, j = response.data.length; i < j; i++) {\n                        $ul.append(\n                            Notes.renderMessageItem(\n                                response.data[i].message,\n                                response.data[i].user,\n                                response.data[i].date\n                            )\n                        );\n                    }\n                } else {\n                    $ul.append($('<li>').html('No notes recorded for this item'));\n                }\n\n                let $formItem = $('<li>');\n                let $textarea = $('<textarea>');\n                let $btn = $('<button>')\n                    .addClass('btn btn-block btn-primary')\n                    .text('Add Item')\n                    .on('click', () => {\n                        $.ajax({\n                                'url': window.SITE_URL + 'api/admin/notes',\n                                'method': 'POST',\n                                'data': {\n                                    'model_name': model_name,\n                                    'model_provider': model_provider,\n                                    'id': id,\n                                    'message': $textarea.val()\n                                }\n                            })\n                            .done((response) => {\n                                $textarea.val('');\n                                $formItem\n                                    .before(\n                                        Notes.renderMessageItem(\n                                            response.data.message,\n                                            response.data.user,\n                                            response.data.date\n                                        )\n                                    );\n\n                            })\n                            .error((response) => {\n                                Notes.showError(response.responseText);\n                            });\n                    });\n\n                $ul.append(\n                    $formItem\n                        .append($textarea)\n                        .append($btn)\n                );\n\n                $modal.html($ul);\n            })\n            .error((response) => {\n                Notes.showError(response.responseText);\n            });\n    };\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Compiles the message ite\n     * @param {String} message The message string\n     * @param {Object} user The user object\n     * @param {String} date The date string\n     * @return {jQuery}\n     */\n    static renderMessageItem(message, user, date) {\n        let $message = $('<div>').addClass('admin-notes__message').html(message);\n        let $meta = $('<div>').addClass('admin-notes__meta');\n        let $user = $('<div>').addClass('admin-notes__user').html(user.first_name + ' ' + user.last_name);\n        let $date = $('<div>').addClass('admin-notes__date').html(date);\n        return $('<li>')\n            .append($message)\n            .append(\n                $meta\n                    .append($user)\n                    .append($date)\n            );\n    };\n\n    // --------------------------------------------------------------------------\n\n    /**\n     * Renders an error\n     * @param {String} responseText The response text from the server\n     */\n    static showError(responseText) {\n        let data;\n        try {\n            data = JSON.parse(responseText);\n\n        } catch (e) {\n            data = {'error': 'An unknown error occurred'};\n        }\n\n        //  @todo (Pablo - 2018-08-01) - Nicer errors\n        alert(data.error);\n    }\n}\n\nexport default Notes;\n","/* export Sortable */\n\n/* globals $, jQuery */\nclass Sortable {\n\n    /**\n     * Construct Sortable\n     * @return {Sortable}\n     */\n    constructor() {\n        $('.js-admin-sortable')\n            .each(function() {\n\n                let $item = $(this);\n                let handle = $item.data('handle') || null;\n                let axis = $item.data('axis') || 'y';\n                let containment = $item.data('containment') || 'parent';\n\n                $item\n                    .sortable({\n                        handle: handle,\n                        axis: axis,\n                        containment: containment,\n                        forceHelperSize: true,\n                        helper: function(e, tr) {\n                            let $originals = tr.children();\n                            let $helper = tr.clone();\n                            $helper\n                                .children()\n                                .each(function(index) {\n                                    // Set helper cell sizes to match the original sizes\n                                    $(this).width($originals.eq(index).outerWidth());\n                                });\n                            return $helper;\n                        },\n                        stop: function() {\n                            $item\n                                .find('.js-admin-sortable__order')\n                                .each(function(index) {\n                                    $(this).val(index);\n                                });\n                        }\n                    });\n            });\n\n        return this;\n    }\n}\n\nexport default Sortable;\n"]}